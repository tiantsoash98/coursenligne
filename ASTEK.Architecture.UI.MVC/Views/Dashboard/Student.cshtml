@using ASTEK.Architecture.Infrastructure.Utility
@model ASTEK.Architecture.UI.MVC.Models.Dashboard.DashboardStudentViewModel
@{
    ViewBag.Title = UIStrings.Title_Dashboard_Student;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section customStyles
{
    <link href="@Url.Content("~/Content/layouts/single-post-1/css/styles.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Content/layouts/single-post-1/css/responsive.css")" rel="stylesheet" />
}

<section class="post-area section">

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h2 class="pre-title">Tableau de bord</h2>
            </div>

            <div class="col-md-12 small-space-top">
                <div class="row">
                    @Html.Partial("_ErrorAlert")

                    <div class="col-md-3">
                        <div class="stat-bloc text-right">
                            <h5>@NumberUtilities.Format(Model.FollowedCount, 2) cours suivis</h5>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="stat-bloc text-right">
                            <h5>@NumberUtilities.Format(Model.UnmarkedCount, 2) exo. non corrigés</h5>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-12 no-right-padding space-top">
                <div class="table-header">
                    <h4 class="pre-title">Retour sur les cours que vous avez suivis</h4>
                </div>

                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Cours</th>
                            <th>Filière</th>
                            <th>Progression</th>
                            <th>Exercice</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var follow in Model.FollowedOutput.Response.Followed)
                        {
                            <tr>
                                <td>@Html.ActionLink(follow.Lesson.LSNTITLE, "Index", "Lesson", new { lessonId = follow.LSNID }, null)</td>
                                <td>@Html.ActionLink(follow.Lesson.Study.STDNAME, "Index", "Study", new { id = follow.Lesson.STDCODE }, null)</td>
                                <td style="width: 200px;">
                                    @{
                                        if (follow.FollowState.FLSWORDING.Replace(" ", "").Equals("FINISHED"))
                                        {
                                            @Html.Action("GetProgressionByValue", "Lesson", new { value = 100 })
                                        }
                                        else if (follow.FollowState.FLSWORDING.Replace(" ", "").Equals("STARTED"))
                                        {
                                            @Html.Action("GetProgression", "Lesson", new { lessonId = follow.LSNID, chapterNumber = follow.LSFCHAPTER, partNumber = follow.LSFPART })
                                        }
                                    }
                                </td>
                                <td>@Html.Action("AddAnswer", "Dashboard", new { lessonId = follow.LSNID })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.FollowedOutput.Response.Followed.Count > 0)
            {
                <div class="col-md-12">
                    <div class="small-space-top">

                        @using (Html.BeginForm("Student", "Dashboard", FormMethod.Get, new { @class = "pagination-form" }))
                        {
                            <div class="form-group row">
                                <label for="page" class="control-label">Page</label>

                                <ul class="personal-pagination-list">
                                    @for (var i = 1; i <= Model.FollowedOutput.Response.TotalPages; i++)
                                    {
                                        <li>
                                            @if (i == Model.FollowedOutput.Response.Page)
                                            {
                                                <input type="submit" name="page" value="@i" class="personal-pagination-item current-page" />
                                            }
                                            @if (i != Model.FollowedOutput.Response.Page)
                                            {
                                                <input type="submit" name="page" value="@i" class="personal-pagination-item" />
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            }


            <div class="col-md-12 no-right-padding space-top">
                <div class="table-header">
                    <h4 class="pre-title">Exercices en attente de note</h4>
                </div>

                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Cours</th>
                            <th>Filière</th>
                            <th>Envoyé le</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var exercice in Model.GetAllUnmarkedOutput.Response.AnswerExercices)
                        {
                            var modalTarget = string.Concat("unmarked-", exercice.Id);

                            <tr>
                                <td>@Html.ActionLink(exercice.Lesson.LSNTITLE, "Index", "Lesson", new { lessonId = exercice.LSNID }, null)</td>
                                <td>@Html.ActionLink(exercice.Lesson.Study.STDNAME, "Index", "Study", new { id = exercice.Lesson.STDCODE }, null)</td>
                                <td>@exercice.ANSDATEPOSTED.ToString("dd/MM/yyyy hh:mm")</td>
                                <td>
                                    <a data-toggle="modal" data-target="#@modalTarget">Détails</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.GetAllUnmarkedOutput.Response.AnswerExercices.Count > 0)
            {
                <div class="col-md-12">
                    <div class="small-space-top">

                        @using (Html.BeginForm("Student", "Dashboard", FormMethod.Get, new { @class = "pagination-form" }))
                        {
                            <div class="form-group row">
                                <label for="page" class="control-label">Page</label>

                                <ul class="personal-pagination-list">
                                    @for (var i = 1; i <= Model.GetAllUnmarkedOutput.Response.TotalPages; i++)
                                    {
                                        <li>
                                            @if (i == Model.GetAllUnmarkedOutput.Response.Page)
                                            {
                                                <input type="submit" name="unmarkedPage" value="@i" class="personal-pagination-item current-page" />
                                            }
                                            @if (i != Model.GetAllUnmarkedOutput.Response.Page)
                                            {
                                                <input type="submit" name="unmarkedPage" value="@i" class="personal-pagination-item" />
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            }

            <div class="col-md-12 no-right-padding space-top">
                <div class="table-header">
                    <h4 class="pre-title">Exercices notés</h4>
                </div>

                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Cours</th>
                            <th>Filière</th>
                            <th>Envoyé le</th>
                            <th>Corrigé le</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var exercice in Model.GetAllMarkedOutput.Response.AnswerExercices)
                        {
                            var modalTarget = string.Concat("marked-", exercice.Id);

                            <tr>
                                <td>@Html.ActionLink(exercice.Lesson.LSNTITLE, "Index", "Lesson", new { lessonId = exercice.LSNID }, null)</td>
                                <td>@Html.ActionLink(exercice.Lesson.Study.STDNAME, "Index", "Study", new { id = exercice.Lesson.STDCODE }, null)</td>
                                <td>@exercice.ANSDATEPOSTED.ToString("dd/MM/yyyy hh:mm")</td>
                                <td>@exercice.ANSDATECORRECTION.GetValueOrDefault().ToString("dd/MM/yyyy hh:mm")</td>
                                <td>
                                    <a data-toggle="modal" data-target="#@modalTarget">Détails</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.GetAllMarkedOutput.Response.AnswerExercices.Count > 0)
            {
                <div class="col-md-12">
                    <div class="small-space-top">

                        @using (Html.BeginForm("Student", "Dashboard", FormMethod.Get, new { @class = "pagination-form" }))
                        {
                            <div class="form-group row">
                                <label for="page" class="control-label">Page</label>

                                <ul class="personal-pagination-list">
                                    @for (var i = 1; i <= Model.GetAllMarkedOutput.Response.TotalPages; i++)
                                    {
                                        <li>
                                            @if (i == Model.GetAllMarkedOutput.Response.Page)
                                            {
                                                <input type="submit" name="markedPage" value="@i" class="personal-pagination-item current-page" />
                                            }
                                            @if (i != Model.GetAllMarkedOutput.Response.Page)
                                            {
                                                <input type="submit" name="markedPage" value="@i" class="personal-pagination-item" />
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            }

            <div class="col-md-12 no-right-padding space-top">
                <div class="table-header">
                    <h4 class="pre-title">Enseignant que vous suivez</h4>
                </div>

                <table class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Nom(s) et prénom(s)</th>
                            <th>Abonné(e) depuis</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var subscribed in Model.SubscribedOutput.Response.Subscribed)
                        {
                            var subBtnId = string.Concat("sub-", subscribed.ACCSUBSCRIBED);

                            <tr>
                                <td>@Html.Partial("_AccountName", subscribed.Subscribed)</td>
                                <td>@subscribed.SUBDATE.ToString("dd/MM/yyyy")</td>
                                <td style="width: 200px;">
                                    <button id="@subBtnId" class="subscribeBtn personal-btn-simple-white">Se désabonner</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.SubscribedOutput.Response.Subscribed.Count > 0)
            {
                <div class="col-md-12">
                    <div class="small-space-top">

                        @using (Html.BeginForm("Student", "Dashboard", FormMethod.Get, new { @class = "pagination-form" }))
                        {
                            <div class="form-group row">
                                <label for="page" class="control-label">Page</label>

                                <ul class="personal-pagination-list">
                                    @for (var i = 1; i <= Model.SubscribedOutput.Response.TotalPages; i++)
                                    {
                                        <li>
                                            @if (i == Model.SubscribedOutput.Response.Page)
                                            {
                                                <input type="submit" name="subscribedPage" value="@i" class="personal-pagination-item current-page" />
                                            }
                                            @if (i != Model.SubscribedOutput.Response.Page)
                                            {
                                                <input type="submit" name="subscribedPage" value="@i" class="personal-pagination-item" />
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            }
        </div><!-- row -->
    </div>
</section><!-- post-area -->

<div id="modals">
    @foreach (var marked in Model.GetAllUnmarkedOutput.Response.AnswerExercices)
    {
        @Html.Action("UnmarkedAnswerModal", "Dashboard", new { answerId = marked.Id })
    }
    @foreach (var marked in Model.GetAllMarkedOutput.Response.AnswerExercices)
    {
        @Html.Action("MarkedAnswerModal", "Dashboard", new { answerId = marked.Id })
    }
</div>

@section customScripts {
    <script src="@Url.Content("~/Scripts/common-js/subscribe.js")"></script>
    <script>
        $(document).ready(function () {
            $('.subscribeBtn').click(function () {
                var id = $(this).attr('id').substring(4);
                toogleSubscriptionLink(id);
            });
        });
    </script>
}
